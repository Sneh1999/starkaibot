[
    {
        "type": "impl",
        "name": "Locker",
        "interface_name": "ekubo::interfaces::core::ILocker"
    },
    {
        "type": "struct",
        "name": "core::array::Span::<core::felt252>",
        "members": [
            {
                "name": "snapshot",
                "type": "@core::array::Array::<core::felt252>"
            }
        ]
    },
    {
        "type": "interface",
        "name": "ekubo::interfaces::core::ILocker",
        "items": [
            {
                "type": "function",
                "name": "locked",
                "inputs": [
                    {
                        "name": "id",
                        "type": "core::integer::u32"
                    },
                    {
                        "name": "data",
                        "type": "core::array::Span::<core::felt252>"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::array::Span::<core::felt252>"
                    }
                ],
                "state_mutability": "external"
            }
        ]
    },
    {
        "type": "impl",
        "name": "ERC20MixinImpl",
        "interface_name": "openzeppelin::token::erc20::interface::ERC20ABI"
    },
    {
        "type": "struct",
        "name": "core::integer::u256",
        "members": [
            {
                "name": "low",
                "type": "core::integer::u128"
            },
            {
                "name": "high",
                "type": "core::integer::u128"
            }
        ]
    },
    {
        "type": "enum",
        "name": "core::bool",
        "variants": [
            {
                "name": "False",
                "type": "()"
            },
            {
                "name": "True",
                "type": "()"
            }
        ]
    },
    {
        "type": "struct",
        "name": "core::byte_array::ByteArray",
        "members": [
            {
                "name": "data",
                "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
                "name": "pending_word",
                "type": "core::felt252"
            },
            {
                "name": "pending_word_len",
                "type": "core::integer::u32"
            }
        ]
    },
    {
        "type": "interface",
        "name": "openzeppelin::token::erc20::interface::ERC20ABI",
        "items": [
            {
                "type": "function",
                "name": "total_supply",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "balance_of",
                "inputs": [
                    {
                        "name": "account",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "allowance",
                "inputs": [
                    {
                        "name": "owner",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "spender",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "transfer",
                "inputs": [
                    {
                        "name": "recipient",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "amount",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "transfer_from",
                "inputs": [
                    {
                        "name": "sender",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "recipient",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "amount",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "approve",
                "inputs": [
                    {
                        "name": "spender",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "amount",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "name",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::byte_array::ByteArray"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "symbol",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::byte_array::ByteArray"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "decimals",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u8"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "totalSupply",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                    {
                        "name": "account",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "transferFrom",
                "inputs": [
                    {
                        "name": "sender",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "recipient",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "amount",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "external"
            }
        ]
    },
    {
        "type": "constructor",
        "name": "constructor",
        "inputs": []
    },
    {
        "type": "struct",
        "name": "ekubo::types::keys::PoolKey",
        "members": [
            {
                "name": "token0",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "token1",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "fee",
                "type": "core::integer::u128"
            },
            {
                "name": "tick_spacing",
                "type": "core::integer::u128"
            },
            {
                "name": "extension",
                "type": "core::starknet::contract_address::ContractAddress"
            }
        ]
    },
    {
        "type": "struct",
        "name": "ekubo::types::i129::i129",
        "members": [
            {
                "name": "mag",
                "type": "core::integer::u128"
            },
            {
                "name": "sign",
                "type": "core::bool"
            }
        ]
    },
    {
        "type": "struct",
        "name": "ekubo::interfaces::core::SwapParameters",
        "members": [
            {
                "name": "amount",
                "type": "ekubo::types::i129::i129"
            },
            {
                "name": "is_token1",
                "type": "core::bool"
            },
            {
                "name": "sqrt_ratio_limit",
                "type": "core::integer::u256"
            },
            {
                "name": "skip_ahead",
                "type": "core::integer::u128"
            }
        ]
    },
    {
        "type": "struct",
        "name": "contracts::StarkBot::SwapData",
        "members": [
            {
                "name": "pool_key",
                "type": "ekubo::types::keys::PoolKey"
            },
            {
                "name": "params",
                "type": "ekubo::interfaces::core::SwapParameters"
            }
        ]
    },
    {
        "type": "struct",
        "name": "ekubo::types::delta::Delta",
        "members": [
            {
                "name": "amount0",
                "type": "ekubo::types::i129::i129"
            },
            {
                "name": "amount1",
                "type": "ekubo::types::i129::i129"
            }
        ]
    },
    {
        "type": "struct",
        "name": "contracts::StarkBot::SwapResult",
        "members": [
            {
                "name": "delta",
                "type": "ekubo::types::delta::Delta"
            }
        ]
    },
    {
        "type": "function",
        "name": "swap",
        "inputs": [
            {
                "name": "swap_data",
                "type": "contracts::StarkBot::SwapData"
            }
        ],
        "outputs": [
            {
                "type": "contracts::StarkBot::SwapResult"
            }
        ],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "mint",
        "inputs": [
            {
                "name": "to",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "withdraw",
        "inputs": [
            {
                "name": "amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "event",
        "name": "openzeppelin::token::erc20::erc20::ERC20Component::Transfer",
        "kind": "struct",
        "members": [
            {
                "name": "from",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "to",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "value",
                "type": "core::integer::u256",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::token::erc20::erc20::ERC20Component::Approval",
        "kind": "struct",
        "members": [
            {
                "name": "owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "spender",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "value",
                "type": "core::integer::u256",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::token::erc20::erc20::ERC20Component::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "Transfer",
                "type": "openzeppelin::token::erc20::erc20::ERC20Component::Transfer",
                "kind": "nested"
            },
            {
                "name": "Approval",
                "type": "openzeppelin::token::erc20::erc20::ERC20Component::Approval",
                "kind": "nested"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
        "kind": "struct",
        "members": [
            {
                "name": "previous_owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "new_owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
        "kind": "struct",
        "members": [
            {
                "name": "previous_owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "new_owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "OwnershipTransferred",
                "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
                "kind": "nested"
            },
            {
                "name": "OwnershipTransferStarted",
                "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
                "kind": "nested"
            }
        ]
    },
    {
        "type": "event",
        "name": "contracts::StarkBot::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "ERC20Event",
                "type": "openzeppelin::token::erc20::erc20::ERC20Component::Event",
                "kind": "flat"
            },
            {
                "name": "OwnableEvent",
                "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
                "kind": "flat"
            }
        ]
    }
]